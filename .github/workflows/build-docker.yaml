name: Build and Push Docker Image

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v4

      - name: login to docker hub
        if: github.event_name == 'push'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: set up docker buildx
        uses: docker/setup-buildx-action@v2
        with:
          driver-opts: image=moby/buildkit:latest
        # replace "latest" with stable version if needed

      - name: build and push docker image
        if: github.event_name == 'push'
        uses: docker/build-push-action@v6
        with:
          platforms: linux/amd64,linux/arm64
          push: true
          #! UPDATE TAG NAME BEFORE PUSHING CHANGES /firstimage:Vx
          tags: docker.io/${{ secrets.DOCKER_HUB_USERNAME }}/firstimage:V2.1
          build-args: |
            SHOPIFY_STORE_DOMAIN=${{ secrets.SHOPIFY_STORE_DOMAIN }}
            SHOPIFY_STOREFRONT_ACCESS_TOKEN=${{ secrets.SHOPIFY_STOREFRONT_ACCESS_TOKEN }}
            DOCKER_HUB_USERNAME=${{ secrets.DOCKER_HUB_USERNAME }}

  # testing with selenium

  test:
    runs-on: ubuntu-latest
    needs: build # Ensures tests run after the build
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Create .env.local file for CI
        run: |
          echo "SHOPIFY_STORE_DOMAIN=${{ secrets.SHOPIFY_STORE_DOMAIN }}" > .env.local
          echo "SHOPIFY_STOREFRONT_ACCESS_TOKEN=${{ secrets.SHOPIFY_STOREFRONT_ACCESS_TOKEN }}" >> .env.local
          echo "DOCKER_HUB_USERNAME=${{ secrets.DOCKER_HUB_USERNAME }}" >> .env.local

      - name: Debug environment variables
        run: |
          echo "Checking if env vars exist (should not show actual values):"
          if [ -n "$SHOPIFY_STORE_DOMAIN" ]; then echo "SHOPIFY_STORE_DOMAIN is set"; else echo "SHOPIFY_STORE_DOMAIN is NOT set"; fi
          if [ -n "$SHOPIFY_STOREFRONT_ACCESS_TOKEN" ]; then echo "SHOPIFY_STOREFRONT_ACCESS_TOKEN is set"; else echo "SHOPIFY_STOREFRONT_ACCESS_TOKEN is NOT set"; fi
          if [ -n "$DOCKER_HUB_USERNAME" ]; then echo "DOCKER_HUB_USERNAME is set"; else echo "DOCKER_HUB_USERNAME is NOT set"; fi

          echo "Checking .env.local file:"
          cat .env.local | grep -v TOKEN | grep -v KEY

        # Show file without exposing secrets

      - name: Start Selenium + Build service
        run: docker compose -f docker-compose.test.yml up -d

      - name: Build and run tests
        run: |
          docker build -t web-test -f Dockerfile.test .
          docker run --rm --network=host web-test

      - name: Stop Selenium services
        if: always()
        run: docker compose down

  # buildx doesn't store under local docker daemon image storage
